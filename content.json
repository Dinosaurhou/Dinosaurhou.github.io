{"meta":{"title":"会飞的小恐龙","subtitle":"","description":"","author":"dinosaur","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2022-01-13T11:58:27.772Z","updated":"2022-01-13T11:58:25.523Z","comments":true,"path":"mylist/index.html","permalink":"http://example.com/mylist/index.html","excerpt":"","text":""},{"title":"","date":"2022-01-13T12:07:46.100Z","updated":"2022-01-13T12:07:46.100Z","comments":true,"path":"404.html","permalink":"http://example.com/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2022-01-16T12:17:04.630Z","updated":"2022-01-16T12:17:04.630Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"🌞会飞的小恐龙⭐ 与&nbsp; 会飞的小恐龙&nbsp; dinosaur 对话中...💬"},{"title":"","date":"2022-01-14T06:38:54.387Z","updated":"2022-01-14T06:38:54.387Z","comments":false,"path":"artitalk/index.html","permalink":"http://example.com/artitalk/index.html","excerpt":"","text":""},{"title":"我的分类","date":"2022-01-17T12:45:42.811Z","updated":"2022-01-17T12:45:42.811Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2022-01-14T08:54:34.976Z","updated":"2022-01-14T08:54:34.976Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。","author":"Dinosaurhou"},{"title":"我的标签","date":"2022-01-17T12:44:28.622Z","updated":"2022-01-17T12:44:28.622Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"CSS基本内容","slug":"CSS基本内容","date":"2022-01-14T10:45:43.000Z","updated":"2022-01-14T11:04:11.983Z","comments":true,"path":"2022/01/14/CSS基本内容/","link":"","permalink":"http://example.com/2022/01/14/CSS%E5%9F%BA%E6%9C%AC%E5%86%85%E5%AE%B9/","excerpt":"CSS基本内容简要","text":"CSS基本内容简要 项目最最基本结构 123456789101112131415 &lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;我是标题&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 123h1 &#123; color: darkturquoise;&#125; CSS的优势 内容和表现分离 网页结构表现统一，可以实现服用 样式十分丰富 建议使用独立于html的CSS文件 利用SEO，容易被搜索引擎收录 CSS的三种导入方式 行内样式 外部样式 内部样式 优先级：就近原则 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;!--外部样式--&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt; &lt;!--内部样式--&gt; &lt;style&gt; h1 &#123; color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--行内样式：在标签中，编写一个style属性，编写样式即可--&gt;&lt;h1 style=&quot;color: red&quot;&gt;我是标题&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 外部链接的两种写法 链接式 1&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt; 导入式 123&lt;style&gt; @import &quot;css/style.css&quot;;&lt;/style&gt; 选择器 基本选择器 1.标签选择器 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; /*标签选择器会选择页面上所有的这个标签的元素*/ h1 &#123; color: red; background: black; border-radius: 12px; &#125; p &#123; background: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;CSS基本入门&lt;/h1&gt;&lt;p&gt;上B站大学&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 2.类选择器 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; /*类选择器的格式 .class的名称&#123;&#125; 好处：可以多个标签归类，是同一个class，可以复用，可以跨用 */ .zyzh1 &#123; color: brown; &#125; .zyzp &#123; color: dimgrey; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 class=&quot;zyzh1&quot;&gt;CSS基本入门&lt;/h1&gt;&lt;p class=&quot;zyzp&quot;&gt;上B站大学&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 3.id选择器 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; /* id选择器 #id名称 &#123;&#125; 优先级： id选择器&gt;class选择器&gt;标签选择器 */ #1 &#123; color: darkturquoise; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;1&quot;&gt;&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 层次选择器 后代选择器 子选择器 相邻兄弟选择器 通用选择器 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; /*p &#123;*/ /* background: red;*/ /*&#125;*/ /*后代选择器*/ ul p &#123; background: red; &#125; /*子选择器,只选一代*/ body &gt; p &#123; background: red; &#125; /*相邻兄弟选择器,只向下选择一个*/ .brother + p &#123; background: red; &#125; /*通用选择器，向下选择所有的兄弟元素*/ .brother ~ p &#123; background: red; &#125; &lt;/style&gt; &lt;/head&gt;&lt;body&gt;&lt;p&gt;p0&lt;/p&gt;&lt;p&gt;p1&lt;/p&gt;&lt;p class=&quot;brother&quot;&gt;p2&lt;/p&gt;&lt;p&gt;p3&lt;/p&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;p4&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;p5&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;p6&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;p7&lt;/p&gt;&lt;p&gt;p8&lt;/p&gt;&lt;p&gt;p9&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 结构伪类选择器 123456789101112131415161718192021/*ul的第一个元素*/ul li:first-child &#123; background: red;&#125;/*ul的最后一个元素*/ul li:last-child &#123; background: red;&#125;/*选择当前p元素的父元素，选中父级元素的第一个，并且是当前元素才生效*/p:nth-child(1) &#123; background: red;&#125;/*选中父元素下的p元素的第2个类型*/p:nth-of-type(2) &#123; background: darkturquoise;&#125; 属性选择器 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; .demo a&#123; float: left; display: block; height: 50px; width: 50px; border-radius: 10px; background: black; text-align: center; color: rgb(255, 0, 0); text-decoration: none; margin-right: 5px; font: bold 20px/50px Arial; &#125; /*存在id属性的元素*/ a[id = first] &#123; background: wheat; &#125; /*class含有links的元素*/ a[class *= &quot;links&quot;] &#123; background: #3aef10; &#125; /*选中href中以http开头的元素*/ a[href ^= http] &#123; background: #f5f00c; &#125; /*选中href中以httpj的元素*/ a[href $= doc] &#123; background: #ff1414; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p class=demo&gt; &lt;a href=http://www.baidu.com class=links item first id=first&gt;1&lt;/a&gt; &lt;a href=http://blog.kuangstudy.com class=links item active target=_blank title=test&gt;2&lt;/a&gt; &lt;a href=images/123.html class=links item&gt;3&lt;/a&gt; &lt;a href=images/123.png class=links item&gt;4&lt;/a&gt; &lt;a href=images/123.jpg class=links item&gt;5&lt;/a&gt; &lt;a href=abc class=links item&gt;6&lt;/a&gt; &lt;a href=/a.pdf class=links item&gt;7&lt;/a&gt; &lt;a href=/abc.pdf class=links item&gt;8&lt;/a&gt; &lt;a href=abc.doc class=links item&gt;9&lt;/a&gt; &lt;a href=abcd.doc class=links item last&gt;10&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; =绝对等于 *=包含于 ^=开头存在 $=结尾存在 美化网页 span标签 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; span &#123; font-size: 500px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;欢迎来到&lt;span&gt;Java&lt;/span&gt;&lt;/body&gt;&lt;/html&gt; 文字样式 1234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; body &#123; font-size: 25px; &#125; p &#123; font-family: 华文楷体; &#125; .p1 &#123; font-weight: bold; color: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;背景设定&lt;/h1&gt;&lt;p class=&quot;p1&quot;&gt; 未来世界人类科技有了重大突破，科学界利用“婴儿感知”概念研发出了“次元空间感知系统”， 曾经不被科技界认可的“婴儿感官视角学说”，终因在科技的不断进化下得已成为现实， 这是人类继“体外合成婴儿”技术成功后的延伸成果。&lt;/p&gt;&lt;p&gt; 起初，人类只能从感应器中通过声纳信号检测到来自亚空间的物质， 随着技术的深入，科学家继续拓展通过制造“微核爆炸”扭曲空间， 从而打开了通往地球平行空间异世界的通道， 他们惊讶的发现原来这个与人类世界平行的异空间， 里面的生态环境与现实中的地球差不多。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 文本样式 1234567891011121314151617181920212223242526272829.p1 &#123; /*首行缩进*/ text-indent: 2em;&#125;/*行高和块的高度一致，就可以上下居中*/.p1 + p &#123; background: #ff1414; height: 100px; line-height: 100px;&#125;/*下划线*/.l1 &#123; text-decoration: underline;&#125;/*中划线*/.l2 &#123; text-decoration: line-through;&#125;/*上划线*/.l3 &#123; text-decoration: overline;&#125;/*图片文字水平居中*/img, span &#123; vertical-align: middle; &#125; 超链接伪类 1234567891011121314151617181920/*通用设置*/a &#123; text-decoration: none; color: black;&#125;/*鼠标悬浮的颜色*/a:hover &#123; color: burlywood;&#125;/*鼠标按住未释放的状态*/a:active &#123; color: green;&#125;#shadow &#123; /*水平偏移 垂直偏移 模糊半径 阴影颜色*/ text-shadow: 10px 10px 0px #FF0000;&#125; 列表 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;nav&quot;&gt; &lt;h2 class=title&gt;全部商品分类&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;图书&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;音像&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;数字商品&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;家用电器&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;手机&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;数码&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;电脑&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;办公&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;家居&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;家装&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;厨具&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;服饰鞋帽&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;个性化妆&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;礼品箱包&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;钟表&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;珠宝&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;食品饮料&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;保健食品&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#&quot;&gt;彩票&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;旅行&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;充值&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;票务&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 123456789101112131415161718192021222324252627282930313233343536373839#nav &#123; width: 350px;&#125;.title &#123; font-size: 18px; font-weight: bold; text-indent: 1em; line-height: 100px; background: #FF0000;&#125;ul &#123; background: gray;&#125;/*list-style: none 去掉点 circle 空心圆 decimal 数字 square 正方形*/ul li &#123; height: 30px; list-style: none; text-indent: 1em;&#125;a &#123; text-decoration: none; font-size: 14px; color: black;&#125;a:hover &#123; color: orange;&#125; 背景 12345ul li &#123; background-image: url(&quot;../images/头像.jpg&quot;); background-repeat: no-repeat; background-position: 200px 2px;&#125; 12345678910111213141516171819202122232425262728293031323334353637&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; div &#123; width: 1000px; height: 700px; /*border:边框粗细 边框线的样式 边框颜色*/ border: 1px solid red; /*背景默认平铺*/ background-image: url(&quot;images/头像.jpg&quot;); &#125; /*水平平铺*/ .div1 &#123; background-repeat: repeat-x; &#125; /*垂直平铺*/ .div2 &#123; background-repeat: repeat-y; &#125; /*不重复*/ .div3 &#123; background-repeat: no-repeat; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;div1&quot;&gt;&lt;/div&gt;&lt;div class=&quot;div2&quot;&gt;&lt;/div&gt;&lt;div class=&quot;div3&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 渐变 Grabient 盒子模型 1234567891011121314151617181920212223242526/*基础设置*/#box &#123; width: 300px; border: 1px solid red; margin: 0 auto;&#125;h2 &#123; font-size: 16px; background: #ff1414; line-height: 30px; color: white;&#125;form &#123; background: #ff1414;&#125;input &#123; border: 1px solid black;&#125;div:nth-of-type(2) &#123; padding: 10px;&#125; 圆角边框 12345678910111213141516div &#123; width: 100px; height: 50px; border: 2px solid red; /*左上 右上 右下 左下 顺时针*/ border-radius: 50px 50px 0 0;&#125;img &#123; display: block; margin: 0 auto; width: 320px; height: 320px; border-radius: 160px; box-shadow: 15px 10px 50px rgb(209,184,162);&#125; 浮动 display float clear 123456/*clear: right;右侧不允许有浮动元素clear: left;右侧不允许有浮动元素clear: both;右侧不允许有浮动元素clear: none;*/ 父级边框塌陷的问题 增加父级元素的高度 1height: 设置增加的高度 增加一个空的div的标签，清楚浮动 123.clear &#123; clear: both;&#125; overflow 1在父级元素中增加一个 overflow: scroll/hidden 父类添加一个伪类：after 12345#father:after &#123; content: &#x27;&#x27;; display: block; clear: both;&#125; 定位 相对定位 123456/*相对定位，相对于正常位置，原来的位置会被保留*/position: relative;top: -20px;left: 20px;bottom: 20px;right: 20px; 练习 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; #father &#123; padding: 5px; border: 3px solid #000000; width: 300px; height: 300px; &#125; a &#123; background: black; color: white; width: 100px; height: 100px; line-height: 100px; text-align: center; text-decoration: none; display: block; &#125; a:hover &#123; background: gray; &#125; #l2, #l4 &#123; position: relative; left: 200px; top: -100px; &#125; #l5 &#123; position: relative; left: 100px; top: -300px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;father&quot;&gt; &lt;a href=&quot;#&quot; id=&quot;l1&quot;&gt;1&lt;/a&gt; &lt;a href=&quot;#&quot; id=&quot;l2&quot;&gt;2&lt;/a&gt; &lt;a href=&quot;#&quot; id=&quot;l3&quot;&gt;3&lt;/a&gt; &lt;a href=&quot;#&quot; id=&quot;l4&quot;&gt;4&lt;/a&gt; &lt;a href=&quot;#&quot; id=&quot;l5&quot;&gt;5&lt;/a&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 绝对定位 没有父级元素的情况下，靠浏览器定位 假设父级元素存在定位，我们通常会相对于父级语速进行便宜 1div:nth-of-type(1) &#123; /*绝对定位：相对于浏览器（在没有父级元素时候）*/ width: 100px; height: 100px; background-color: red; position: absolute; right: 0; bottom: 0;&#125; 固定定位 1div:nth-of-type(2) &#123; width: 100px; height: 100px; background-color: #3aef10; position: fixed; right: 0; top: 0;&#125; z-index（图层概念） 1&lt;div id=&quot;content&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;img src=&quot;images/头像.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt; &lt;li class=&quot;tipText&quot;&gt;这是我的头像&lt;/li&gt; &lt;li class=&quot;tipBg&quot;&gt;&lt;/li&gt; &lt;li&gt;Time:2020.12.12&lt;/li&gt; &lt;li&gt;Location:Mars&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; 1.tipText, .tipBg &#123; position: absolute; width: 320px; top: 295px;&#125;.tipText &#123; z-index: 5; color: red;&#125;.tipBg &#123; background-color: black; opacity: 0.1;/*透明度*/ /*filter: alpha(opacity: 4);（IE8之前的版本浏览器）*/&#125;","categories":[{"name":"前端","slug":"前端","permalink":"http://example.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"网页","slug":"网页","permalink":"http://example.com/tags/%E7%BD%91%E9%A1%B5/"},{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"},{"name":"前端","slug":"前端","permalink":"http://example.com/tags/%E5%89%8D%E7%AB%AF/"}],"author":"Dinosaurhou"},{"title":"初识Java内存模型以及JVM","slug":"初识Java内存模型以及JVM","date":"2022-01-14T02:39:27.000Z","updated":"2022-01-14T10:08:56.907Z","comments":true,"path":"2022/01/14/初识Java内存模型以及JVM/","link":"","permalink":"http://example.com/2022/01/14/%E5%88%9D%E8%AF%86Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%BB%A5%E5%8F%8AJVM/","excerpt":"初识Java内存模型；简单了解JVM （仅供个人使用）","text":"初识Java内存模型；简单了解JVM （仅供个人使用） 参考博文如下： 再有人问你Java内存模型是什么，就把这篇文章发给他。_HollisChuang’s Blog-CSDN博客_再有人问你java内存模型 全面理解Java内存模型(JMM)及volatile关键字_zejian的博客-CSDN博客_jmm内存模型 volatile和synchronized的区别_Heaven Wang 的专栏-CSDN博客_synchronized和volatile区别 JVM原理最全、清晰、通俗讲解，五天40小时吐血整理_小爷欣欣-CSDN博客_jvm原理 Java内存模型 JMM，即Java内存模型（Java Memory Model的缩写）。Java内存模型是在硬件内存模型上的更高层的抽象，它屏蔽了各种硬件和操作系统访问的差异性，保证了Java程序在各种平台下对内存的访问都能达到一致的效果。它描述的是一种规则或者是规范。 **JMM规定：**所有的变量都存储在主内存中，每条线程还有自己的工作内存，线程的工作内存中保存了该线程中是用到的变量的主内存副本拷贝，线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存。不同的线程之间也无法直接访问对方工作内存中的变量，线程间变量的传递均需要自己的工作内存和主存之间进行数据同步进行。 JMM的三个特性（简单理解） 原子性 CPU不能中途暂停一个操作然后再调度，不能中断，即使是在多线程环境下，一个操作一旦开始就不会被其他线程影响。要么不执行，要么开始不停止。 Java为保证原子性，Java中可以使用synchronized来保证方法和代码块内的操作为原子性。 可见性 多线程访问同一个变量时，一个线程修改了这个变量的值，其他线程也能看的见。 Java中的volatile关键字提供了一个功能，那就是被其修饰的变量在被修改后可以立即同步到主内存，被其修饰的变量在每次是用之前都从主内存刷新。当然synchronized也可以保证可见性。 有序性 在单线程中，代码就是按照顺序执行的。但是再多线程中，程序在编译成机器语言之后会出现指令重排现象，重排后的指令与原指令的顺序未必一致。 在Java中，可以使用synchronized和volatile来保证多线程之间操作的有序性。其中，volatile关键字会禁止指令重排。synchronized关键字保证同一时刻只允许一条线程操作。 volatile和synchronized volatile 被volatile修饰的变量对所有线程都是可见的，即如果一个线程改变了被volatile修饰的变量的值，那么所有线程都是知道的 禁止指令重排 当程序执行到·volatile·变量的读操作或者写操作时，在其前面的操作的更改肯定全部已经进行，且结果已经对后面的操作可见；在其后面的操作肯定还没有进行 在进行指令优化时，不能将在对volatile变量访问的语句放在其后面执行，也不能把volatile变量后面的语句放到其前面执行 synchronized 阻止其它线程获取当前对象的监控锁，这样就使得当前对象中被synchronized关键字保护的代码块无法被其它线程访问，也就无法并发执行。因为这样所以synchronized会影响性能和效率 volatile和synchronized的一个例子： 12345678910111213141516171819202122public class Test &#123; public volatile int inc = 0; public void increase() &#123; inc++; &#125; public static void main(String[] args) &#123; final Test test = new Test(); for(int i=0;i&lt;10;i++)&#123; new Thread()&#123; public void run() &#123; for(int j=0;j&lt;1000;j++) test.increase(); &#125;; &#125;.start(); &#125; while(Thread.activeCount()&gt;1) //保证前面的线程都执行完 Thread.yield(); System.out.println(test.inc); &#125;&#125; 例子中用new了10个线程，分别去调用1000次increase()方法，每次运行结果都不一致，都是一个小于10000的数字。自增操作不是原子操作，volatile 是不能保证原子性的。回到文章一开始的例子，使用volatile修饰int型变量i，多个线程同时进行i++操作。比如有两个线程A和B对volatile修饰的i进行i++操作，i的初始值是0，A线程执行i++时刚读取了i的值0，就切换到B线程了，B线程（从内存中）读取i的值也为0，然后就切换到A线程继续执行i++操作，完成后i就为1了，接着切换到B线程，因为之前已经读取过了，所以继续执行i++操作，最后的结果i就为1了。同理可以解释为什么每次运行结果都是小于10000的数字。 用synchronized修改 1234public int inc = 0;public synchronized void increase() &#123; inc++;&#125; JVM JVM的概述 JVM是Java Virtual Machine（Java虚拟机）的缩写，JVM是一种用于计算设备的规范，它是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。 Java虚拟机有自己完善的硬件架构，如处理器、堆栈等，还具有相应的指令系统。Java虚拟机本质上就是一个程序，当它在命令行上启动的时候，就开始执行保存在某字节码文件中的指令。 Java语言的可移植性正是建立在Java虚拟机的基础上。任何平台只要装有针对于该平台的Java虚拟机，字节码文件（.class）就可以在该平台上运行。这就是“一次编译，多次运行”。 1.程序计数器 PC寄存器，是一块较小的内存空间，它可以看做是当前线程所执行的字节码的行号指示器。 当虚拟机正在执行的方法是一个本地（native）方法的时候，JVM的pc寄存器存储的值是undefined。 程序计数器是线程私有的，它的生命周期与线程相同，每个线程都有一个。 此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。 2.Java虚拟机栈 线程私有的，生命周期与线程相同 每个线程创建的时候会创建一个JVM栈，JVM栈中每个栈帧存放的为当前线程中局部基本类型的变量 每一个方法从被调用直至执行完成的过程就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。 3.本地方法栈 本地方法指得是方法的修饰符是带有Native的，但是方法体不是用java代码写的类方法。 4.Java堆 在虚拟机启动的时候创建 唯一目的就是存放对象实例，几乎所有的对象实例以及数组都要在这里分配内存 Java堆是垃圾收集器管理的主要区域 因此很多时候java堆也被称为“GC堆”（Garbage Collected Heap） java堆是计算机物理存储上不连续的、逻辑上是连续的，也是大小可调节的 5.方法区 用于存放已被虚拟机加载的类信息、常量、静态变量、以及编译后的方法实现的二进制形式的机器指令集等数据。 运行时常量池（Runtime Constant Pool）是方法区的一部分。","categories":[{"name":"Java","slug":"Java","permalink":"http://example.com/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}],"author":"Dinosaurhou"},{"title":"Java","slug":"Java","date":"2022-01-13T13:01:18.000Z","updated":"2022-01-14T10:33:02.462Z","comments":true,"path":"2022/01/13/Java/","link":"","permalink":"http://example.com/2022/01/13/Java/","excerpt":"","text":"一、初识Java 1.Java的简介 Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。 既然我们认识了Java，那么他是如何一步一步的诞生的呢？ 2.Java的诞生 因为Java是基于C语言的，所以这里需要提到C&amp;C++ 1972年C的诞生 贴近硬件，运行极快，效率极高 操作系统，编译器，数据库，网络系统 指针和内存管理（真让人头大） 1982年C++诞生 面向对象 兼容C 图形领域、游戏（本人就很想要学习C++进军游戏行业） 人们想要一个新的语言：语法像C，没有指针，没有内存管理，真正的可移植性，编写一次，到处运行（Write Once，Run Anywhere），面向对象，类型安全，高质量的类库… Java初生 1995年的网页简单粗糙，缺乏互动性 Java 2 标准版（J2SE）：占领桌面 Java 2 移动版（J2ME）：占领手机 Java 2 企业版（J2EE）：占领服务器 大量的巨头加入 Java发展 基于Java开发了巨多的平台，系统，工具 构建工具：Ant,Maven,Jekins 应用服务器：Tomcat,Jetty,Jboss,Websphere,weblogic Web开发：Struts,Spring,Hibernate,MyBatis 开发工具：Eclipse,Netbean,Intellij Idea,Jbuilder 2006：Hadoop（大数据领域） 2008：Android（手机端） 3.Java优势和缺点 优势 简单性 面向对象 可移植性 高性能 分布性 动态性 多线程 安全性 健壮性 劣势 使用大量的内存，靠虚拟机运行，运行速度相对较慢 不能和底层打交道，不支持底层操作 Java删除了指针，不如C/C++等语言灵活 4.Java三大版本 JavaSE：标准版（桌面程序，控制台开发…） JavaME：嵌入式开发（手机，小家电…） JavaEE：E企业级开发（Web端，服务器开发，移动设备…） 我们首先了解了Java，下面我们就开始学习如何安装JDK的下载和安装 二、JDK的下载和安装 1.JDK是什么？ JDK是Java Development ToolKit 的简称，是Java开发工具包。JDK是整个Java的核心，包括Java要运行环境（Java Runtime Envirnment，简称 JRE），Java工具（Javac，Java，Javap…），以及Java基础类库。 2.JDK的种类 现在主流的JDK是Oracle公司开发的JDK，除了 Oracle JDK（商业化，更稳定）之外，还有很多公司和组织开发了属于自己的 JDK，比较有名的有 IBM JDK（更适合 IBM） 和 OpenJDK（开源的）。每个 JDK 都有自己的优缺点。 下为链接 OpenJDK和Oracle JDK有什么区别和联系? 3.JDK的下载 因为我自己安装的是OracleJDK，所以下面的安装教程是OracleJDK的。 其实现在OracleJava已经更新到16，但是现在企业上还是以JDK8为主。 个人下载JDK8（因为本人刚刚初学入门） a.进入Oracle官网 Java SE Development Kit 8 — 下载 | Oracle 中国 b.账号的注册和下载JDK8 我们要想要下载JDK8就需要Oracle的官方账号，还需要同意协议… 进入官网后往下移动界面，如图： 注册账号应该不用我多说 如何看自己电脑是几位操作系统下面我会讲 点击之后会弹出如下边框： c.直接打开exe文件直接安装 这里不建议安装到C盘，自己在其他盘新建文件夹安装（！务必记住自己的安装路径！后面用的到！） 4.JDK的环境配置（Win10） JDK环境配置是JDK安装过程中最为重要的内容，大多数初学者安装JDK最大的问题就是出在环境配置上面。我相信很多初学者最头痛的就是环境变量的配置了，下面我手把手的教大家如何配置环境变量（Win10为例） a.首先打开环境变量配置的界面 右键此电脑/我的电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量 打开环境变量设置后就会跳出一个对话框（如下图） b.开始配置 单击系统变量下的“新建”，会跳出“新建系统变量”的对话框 变量名：JAVA_HOME 变量值：D:\\JAVA\\JDK8（这里的路径是Java文件安装路径，在上文我有强调过记住自己的安装路径） Java文件安装路径（以我自己的为例） 接下来是新建CLASSPATH变量 变量名：CLASSPATH 变量值：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar 然后双击打开Path，点击新建按钮，分别新建两个环境变量 %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin 记得点两次确定！ 这样我们就大功完成了！！！ c.检验JDK是否安装完成 键盘win+R打开“运行”窗口，输入cmd，之后回车，打开命令提示符窗口 分别输入java和javac，回车之后会有如下显示 出现如下图所示，而不是“javac不是内部变量……”即表示安装成功。 三、Intellij IDEA的安装 IDEA是java编程语言开发的集成环境 为什么要安装IDEA呢？因为它真的非常好用（编代码省去了很多烦人的步骤，用过的人都说香） a.下载和安装 这里是IDEA的官网 下载 IntelliJ IDEA 进入之后会有两种选择，一种是社区版，一种是旗舰版（付费，但是可以用学校的教育邮箱白嫖），本人是选择社区版 打开自己的exe文件 进入安装界面 建议不要设置安装在C盘，请自行更改安装目录 b.调试IDEA 进入IDEA它会自动选好java 我们可以新建一个项目 这里我们需要填写一个项目名称和项目位置 完成之后就进入界面，新建一个Java类，命名为“Hello”（因为我安装了中文插件，所以这里显示中文，下面会讲如何安装汉化插件） 输入以下代码 12345public class Hello &#123;public static void main(String[] args) &#123; System.out.println(&quot;Hello World&quot;);&#125;&#125; 呈现如下结果，成功！ c.安装汉化插件 打开设置 进入界面，点击插件（中英文按键设置的相对位置是一样的） 最后重启一下IDEA就行啦！ 最后插一句，IDEA的把玩性还是很大的，大家可以自行搜索好玩的IDEA插件以及IDEA配置优化教程这样可以让你的编程更加舒适！ 介绍一款非非非常好用的软件Typora 这里附上它的下载地址：Typora 上图是它的官网界面，真的很好看！！！ 具体的下载安装也是非常简单的，我就不过多赘述了。 下面附大佬们的Typora入门链接！↓↓↓↓↓↓↓ TYPORA语法大全_mollen的博客-CSDN博客_typora TYPORA的使用手册_SIMBA1949的博客-CSDN博客_typora使用 附：如何知道自己电脑是几位操作系统 右键单击此电脑/ 我的电脑-&gt;属性 查看属性中的系统类型 这里我的电脑是64位的操作系统 最后感谢各位阅读！这是本人第一篇Blog，如有错误，请指出！本人一定删除整改","categories":[{"name":"Java","slug":"Java","permalink":"http://example.com/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}],"author":"Dinosaurhou"},{"title":"Hello World","slug":"hello-world","date":"2022-01-05T05:09:40.343Z","updated":"2022-01-13T13:16:58.915Z","comments":true,"path":"2022/01/05/hello-world/","link":"","permalink":"http://example.com/2022/01/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[],"author":"Dinosaurhou"}],"categories":[{"name":"前端","slug":"前端","permalink":"http://example.com/categories/%E5%89%8D%E7%AB%AF/"},{"name":"Java","slug":"Java","permalink":"http://example.com/categories/Java/"}],"tags":[{"name":"网页","slug":"网页","permalink":"http://example.com/tags/%E7%BD%91%E9%A1%B5/"},{"name":"CSS","slug":"CSS","permalink":"http://example.com/tags/CSS/"},{"name":"前端","slug":"前端","permalink":"http://example.com/tags/%E5%89%8D%E7%AB%AF/"},{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]}